---
import { getCollection } from "astro:content";

export interface BlogPost {
    id: string,
    url: string,
    title: string,
    author: string,
    pubDate: string,
    description?: string,
    image?: {
        url: string,
        alt?: string
    },
    tags: string[]
}

export async function getAllPosts(): Promise<BlogPost[]> {
    const postsCollection = await getCollection("posts");
    return postsCollection.map(({ data, id, slug}) => ({ ...data, url: `/posts/${slug}`, id}));
}

export const getUniqueTags = (posts: BlogPost[]) => {
    return [...new Set(posts?.map(({ tags }) => tags).flat())];
}

interface GetFilteredPostsProps {
    tag: string, 
    posts: BlogPost[]
}

export function getFilteredPosts ({ posts, tag}: GetFilteredPostsProps) {
    return posts?.filter(({ tags }) => tags.includes(tag));
}
---